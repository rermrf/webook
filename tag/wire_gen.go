// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/google/wire"
	"webook/pkg/grpcx"
	"webook/tag/grpc"
	"webook/tag/ioc"
	"webook/tag/repository"
	"webook/tag/repository/cache"
	"webook/tag/repository/dao"
	"webook/tag/service"
)

// Injectors from wire.go:

func InitTagGRPCServer() *grpcx.Server {
	loggerV1 := ioc.InitLogger()
	db := ioc.InitDB(loggerV1)
	tagDao := dao.NewGORMTagDao(db)
	cmdable := ioc.InitRedis()
	tagCache := cache.NewRedisTagCache(cmdable)
	tagRepository := repository.NewCachedTagRepository(tagDao, tagCache, loggerV1)
	client := ioc.InitKafka()
	producer := ioc.InitProducer(client)
	tagService := service.NewTagService(tagRepository, producer, loggerV1)
	tagServiceServer := grpc.NewTagServiceServer(tagService)
	server := ioc.InitGRPCServer(tagServiceServer, loggerV1)
	return server
}

// wire.go:

var thirdPartySet = wire.NewSet(ioc.InitDB, ioc.InitRedis, ioc.InitLogger, ioc.InitEtcd, ioc.InitKafka)
