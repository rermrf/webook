// Code generated by MockGen. DO NOT EDIT.
// Source: ./ranking.go
//
// Generated by this command:
//
//	mockgen -source=./ranking.go -package=repomocks -destination=./mocks/ranking_mock.go
//

// Package repomocks is a generated GoMock package.
package repomocks

import (
	context "context"
	gomock "go.uber.org/mock/gomock"
	reflect "reflect"
	"webook/article/domain"
)

// MockRankingRepository is a mock of RankingRepository interface.
type MockRankingRepository struct {
	ctrl     *gomock.Controller
	recorder *MockRankingRepositoryMockRecorder
}

// MockRankingRepositoryMockRecorder is the mock recorder for MockRankingRepository.
type MockRankingRepositoryMockRecorder struct {
	mock *MockRankingRepository
}

// NewMockRankingRepository creates a new mock instance.
func NewMockRankingRepository(ctrl *gomock.Controller) *MockRankingRepository {
	mock := &MockRankingRepository{ctrl: ctrl}
	mock.recorder = &MockRankingRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRankingRepository) EXPECT() *MockRankingRepositoryMockRecorder {
	return m.recorder
}

// GetTopN mocks base method.
func (m *MockRankingRepository) GetTopN(ctx context.Context) ([]domain.Article, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTopN", ctx)
	ret0, _ := ret[0].([]domain.Article)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTopN indicates an expected call of GetTopN.
func (mr *MockRankingRepositoryMockRecorder) GetTopN(ctx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTopN", reflect.TypeOf((*MockRankingRepository)(nil).GetTopN), ctx)
}

// ReplaceTopN mocks base method.
func (m *MockRankingRepository) ReplaceTopN(ctx context.Context, arts []domain.Article) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ReplaceTopN", ctx, arts)
	ret0, _ := ret[0].(error)
	return ret0
}

// ReplaceTopN indicates an expected call of ReplaceTopN.
func (mr *MockRankingRepositoryMockRecorder) ReplaceTopN(ctx, arts any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ReplaceTopN", reflect.TypeOf((*MockRankingRepository)(nil).ReplaceTopN), ctx, arts)
}
