// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package startup

import (
	"github.com/google/wire"
	"webook/search/grpc"
	"webook/search/repository"
	"webook/search/repository/dao"
	"webook/search/service"
)

// Injectors from wire.go:

func InitSearchServer() *grpc.SearchServiceServer {
	client := InitESClient()
	userDao := dao.NewUserESDao(client)
	userRepository := repository.NewUserRepository(userDao)
	articleDao := dao.NewArticleESDao(client)
	tagDao := dao.NewTagESDao(client)
	articleRepository := repository.NewArticleRepository(articleDao, tagDao)
	searchService := service.NewSearchService(userRepository, articleRepository)
	searchServiceServer := grpc.NewSearchServiceServer(searchService)
	return searchServiceServer
}

func InitSyncServer() *grpc.SyncServiceServer {
	client := InitESClient()
	userDao := dao.NewUserESDao(client)
	userRepository := repository.NewUserRepository(userDao)
	articleDao := dao.NewArticleESDao(client)
	tagDao := dao.NewTagESDao(client)
	articleRepository := repository.NewArticleRepository(articleDao, tagDao)
	anyDao := dao.NewAnyESDao(client)
	anyRepository := repository.NewAnyRepository(anyDao)
	syncService := service.NewSyncService(userRepository, articleRepository, anyRepository)
	syncServiceServer := grpc.NewSyncServiceServer(syncService)
	return syncServiceServer
}

// wire.go:

var thirdPartySet = wire.NewSet(
	InitLog,
	InitESClient,
)

var serviceSet = wire.NewSet(service.NewSearchService, service.NewSyncService, repository.NewAnyRepository, repository.NewArticleRepository, repository.NewUserRepository, dao.NewUserESDao, dao.NewTagESDao, dao.NewArticleESDao, dao.NewAnyESDao)
