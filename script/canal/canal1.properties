#############################################################
######### 		common argument		#############
#############################################################
# ??tcp???????ip?mq??????
canal.ip =
# ???zk???ip?????????
canal.register.ip =
# tcp??
canal.port = 11111 
# ????????
canal.metrics.pull.port = 11112
# canal instance user/passwd??????????
# canal.user = canal
# canal.passwd = E3619321C1A937C46A0D8BD1DAC39F93B27D4458

# canal-admin?????
# adminserver????????????admin???????admin??????
canal.admin.manager = 127.0.0.1:8089
canal.admin.port = 11110
canal.admin.user = admin
canal.admin.passwd = 6BB4837EB74329105EE4568DDA7DC67ED2CA2AD9
# admin auto register
canal.admin.register.auto = true
canal.admin.register.cluster =
canal.admin.register.name =

# zk ??zk???
canal.zkServers =
# ?????zk????ms
canal.zookeeper.flush.period = 1000
# ????netty
canal.withoutNetty = false
# ?????? tcp, kafka, rocketMQ, rabbitMQ
canal.serverMode = kafka
# ??????
canal.file.data.dir = ${canal.conf.dir}
# ?????????ms
canal.file.flush.period = 1000
## ?????????????2???
canal.instance.memory.buffer.size = 16384
## ????????byte?
canal.instance.memory.buffer.memunit = 1024 
## ????
# MEMSIZE ??????????size*memunit
# ITEMSIZE?????????????????????
canal.instance.memory.batch.mode = MEMSIZE
# ????raw????????json????????byte??
canal.instance.memory.rawEntry = true

## ????
# ????????
canal.instance.detecting.enable = false
# ??sql
#canal.instance.detecting.sql = insert into retl.xdual values(1,now()) on duplicate key update x=now()
canal.instance.detecting.sql = select 1
# ????
canal.instance.detecting.interval.time = 3
# ??????
canal.instance.detecting.retry.threshold = 3
# ????????mysql?????standby???
canal.instance.detecting.heartbeatHaEnable = false

# ?????????????????????
canal.instance.transaction.size =  1024
# mysql??????binlog??????????????????????
canal.instance.fallbackIntervalInSeconds = 60

## ????
# ????????byte
canal.instance.network.receiveBufferSize = 16384
# ????????byte
canal.instance.network.sendBufferSize = 16384
# ???????????
canal.instance.network.soTimeout = 10

# binlog ????
# ????druid??ddl
canal.instance.filter.druid.ddl = false
# ????dcl???????
canal.instance.filter.query.dcl = false
# ????dml???????
canal.instance.filter.query.dml = false
# ????ddl??????
canal.instance.filter.query.ddl = false
# ????table???????table????
canal.instance.filter.table.error = false
# ????dml???????update/insert/update??
canal.instance.filter.rows = false
# ?????????????????kafka????TransactionBegin/Transactionend???
canal.instance.filter.transaction.entry = false
# ????dml?insert??
canal.instance.filter.dml.insert = false
# ????dml?update??
canal.instance.filter.dml.update = false
# ????dml?delete??
canal.instance.filter.dml.delete = false

# ???binlog????
canal.instance.binlog.format = ROW,STATEMENT,MIXED
# ???binlog????
canal.instance.binlog.image = FULL,MINIMAL,NOBLOB

# ddl?????????????????????????????
canal.instance.get.ddl.isolation = false

# ??????
# ????????binlog
canal.instance.parser.parallel = true
# ?????,?????????????
# ??Runtime.getRuntime().availableProcessors()?
#canal.instance.parser.parallelThreadSize = 16
## ??????????,kb ??2????
canal.instance.parser.parallelBufferSize = 256

# ????table mate ?tsdb????????
canal.instance.tsdb.enable = true
# ????table mate??????????h2???
canal.instance.tsdb.dir = ${canal.file.data.dir:../conf}/${canal.instance.destination:}
canal.instance.tsdb.url = jdbc:h2:${canal.instance.tsdb.dir}/h2;CACHE_SIZE=1000;MODE=MYSQL;
canal.instance.tsdb.dbUsername = canal
canal.instance.tsdb.dbPassword = canal
# ?????????
canal.instance.tsdb.snapshot.interval = 24
# ?????????
canal.instance.tsdb.snapshot.expire = 360

#############################################################
######### 		destinations		#############
#############################################################
# ??server??????
canal.destinations = webook
# canal ??????
canal.conf.dir = ../conf
# ????????????????????
canal.auto.scan = true
# ??????????
canal.auto.scan.interval = 5

# ????binlog???????????????
# ??:??????????????
canal.auto.reset.latest.pos.mode = false

# tsdb????,?canal.conf.dir???
canal.instance.tsdb.spring.xml = classpath:spring/tsdb/h2-tsdb.xml
#canal.instance.tsdb.spring.xml = classpath:spring/tsdb/mysql-tsdb.xml

# ????????
# manager: canal-admin?????
# spring: ??????
canal.instance.global.mode = manager
# ????lazy???
canal.instance.global.lazy = false
# ?????????
canal.instance.global.manager.address = ${canal.admin.manager}
# ????????mode?Spring????file?????default?????memory????
#canal.instance.global.spring.xml = classpath:spring/memory-instance.xml
canal.instance.global.spring.xml = classpath:spring/file-instance.xml
#canal.instance.global.spring.xml = classpath:spring/default-instance.xml

# mq????????mq?????????????
######################################################
######### 	      MQ Properties      #############
######################################################
# aliyun ak/sk , support rds/mq
canal.aliyun.accessKey =
canal.aliyun.secretKey =
canal.aliyun.uid=

canal.mq.flatMessage = true
canal.mq.canalBatchSize = 50
canal.mq.canalGetTimeout = 100
# Set this value to "cloud", if you want open message trace feature in aliyun.
canal.mq.accessChannel = local

canal.mq.database.hash = true
canal.mq.send.thread.size = 30
canal.mq.build.thread.size = 8

##################################################################
######### 		     Kafka 		     #############
##################################################################
# MQ??
kafka.bootstrap.servers = kafka:9092
# ack??
# all???kafka???????????
# 1: kafka??????????????
# 0: ?????????
kafka.acks = all
# ??????
kafka.compression.type = none
# ?????????????byte
kafka.batch.size = 16384
# ????????????ms
kafka.linger.ms = 1
# ???????byte
kafka.max.request.size = 1048576
# ??????
kafka.buffer.memory = 33554432
# ?????????
kafka.max.in.flight.requests.per.connection = 1
# ??????
kafka.retries = 0

#kafka?kerberos ?????????2?????
#kafka.kerberos.enable = false
#kafka.kerberos.krb5.file = "../conf/kerberos/krb5.conf"
#kafka.kerberos.jaas.file = "../conf/kerberos/jaas.conf"

##########################################################
######### 		    RocketMQ	     #############
##########################################################
#rocketmq.producer.group = test
#rocketmq.enable.message.trace = false
#rocketmq.customized.trace.topic =
#rocketmq.namespace =
#rocketmq.namesrv.addr = 127.0.0.1:9876
#rocketmq.retry.times.when.send.failed = 0
#rocketmq.vip.channel.enabled = false
#rocketmq.tag =

##########################################################
######### 		    RabbitMQ	     #############
##########################################################
#rabbitmq.host =
#rabbitmq.virtual.host =
#rabbitmq.exchange =
#rabbitmq.username =
#rabbitmq.password =
#rabbitmq.deliveryMode =
