services:
  mysql8: 
    image: mysql:8.4.2
    restart: always
    # command: --default-authentication-plugin=mysql_native_passwords
    environment:
      MYSQL_ROOT_PASSWORD: root
    volumes:
      # 设置初始化脚本
      - ./script/mysql/:/docker-entrypoint-initdb.d/
    ports:
      # 设置端口映射
      - "13306:3306"
  redis:
    image: redis:7.4.0
    # restart: always
    environment:
      REDIS_PASSWORD: ""
    ports:
      # 设置端口映射
      - "6379:6379"
  etcd:
    image: bitnami/etcd:3.4.34
    environment:
      # 不需要密码
      - ALLOW_NONE_AUTHENTICATION=yes
    ports:
      - "12379:2379"
  mongo:
    image: mongo:8.0.0
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - "27017:27017"
  kafka:
    image: bitnami/kafka:3.6
    ports:
      - "9092:9092"
      - "9094:9094"
    environment:
      - KAFKA_CFG_NODE_ID=0
#      - 允许自动创建 topic，线上不要开启
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://0.0.0.0:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
  prometheus:
    image: prom/prometheus
    volumes:
#      - 姜本地的 prometheus 文件映射到容器内的配置文件
      - ./prometheus.yaml:/etc/prometheus/prometheus.yml
    ports:
      - "9091:9090"
  grafana:
    image: grafana/grafana-enterprise:11.2.2
    ports:
      - "3000:3000"
  zipkin:
    # 用的是不支持 kafka 之类的简化版本
    image: openzipkin/zipkin-slim:3.4
    ports:
      - "9411:9411"